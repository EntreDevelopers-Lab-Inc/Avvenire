===================================================== FAILURES =====================================================
______________________________________________ test_mint_before_start ______________________________________________

    def test_mint_before_start():
        # avvenire_contract = AvvenireTest[-1]
        # account = get_dev_account()
        with brownie.reverts():
            # Should throw a VirtualMachineError
>           auction_mint(1)

tests\test_auction.py:42:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\test_auction.py:42: in test_mint_before_start
    auction_mint(1)
scripts\script_definitions.py:115: in auction_mint
    avvenire_contract.auctionMint(quantity, {"from": account})
venv\lib\site-packages\brownie\network\contract.py:1629: in __call__
    return self.transact(*args)
venv\lib\site-packages\brownie\network\contract.py:1502: in transact
    return tx["from"].transfer(
venv\lib\site-packages\brownie\network\account.py:682: in transfer
    receipt._raise_if_reverted(exc)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <Transaction '0x7e173b8e0e245d9c97feeae73559d2de6eb78ae63c5b505fa342925c053795ef'>, exc = None

    def _raise_if_reverted(self, exc: Any) -> None:
        if self.status or CONFIG.mode == "console":
            return
        if not web3.supports_traces:
            # if traces are not available, do not attempt to determine the revert reason
            raise exc or ValueError("Execution reverted")

        if self._dev_revert_msg is None:
            # no revert message and unable to check dev string - have to get trace
            self._expand_trace()
        if self.contract_address:
            source = ""
        elif CONFIG.argv["revert"]:
            source = self._traceback_string()
        else:
            source = self._error_string(1)
            contract = state._find_contract(self.receiver)
            if contract:
                marker = "//" if contract._build["language"] == "Solidity" else "#"
                line = self._traceback_string().split("\n")[-1]
                if marker + " dev: " in line:
                    self._dev_revert_msg = line[line.index(marker) + len(marker) : -5].strip()

>       raise exc._with_attr(
            source=source, revert_msg=self._revert_msg, dev_revert_msg=self._dev_revert_msg
        )
E       AttributeError: 'NoneType' object has no attribute '_with_attr'

venv\lib\site-packages\brownie\network\transaction.py:446: AttributeError
---------------------------------------------- Captured stdout setup -----------------------------------------------
Contract deployed to 0x3194cBDC3dbcd3E11a07892e7bA5c3394048Cc87
________________________________________________ test_auction_mint _________________________________________________

    def test_auction_mint():
        avvenire_contract = AvvenireTest[-1]
        account = get_dev_account()

        # Set Dutch Auction price to 0.5
        drops = 5
        drop_start = chain.time() + SALE_START_TIME + int(drops * 60 * 7.5)

        if network.show_active() in LOCAL_BLOCKCHAIN_ENVIRONMENTS:
            # chain.sleep(second_drop_start)
            chain.mine(1, drop_start)
        else:
            time.sleep(drop_start + 5)

        balance_before_mint = account.balance()

        # Tests refundIfOver modifier
>       avvenire_contract.auctionMint(
            2, {"from": account, "value": Web3.toWei(1.1, "ether")}
        )

tests\test_auction.py:62:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
venv\lib\site-packages\brownie\network\contract.py:1629: in __call__
    return self.transact(*args)
venv\lib\site-packages\brownie\network\contract.py:1502: in transact
    return tx["from"].transfer(
venv\lib\site-packages\brownie\network\account.py:682: in transfer
    receipt._raise_if_reverted(exc)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <Transaction '0xc05eda224604613dac4d0432ae596625e409da28ed4759bbb9aa09f4379f9872'>, exc = None

    def _raise_if_reverted(self, exc: Any) -> None:
        if self.status or CONFIG.mode == "console":
            return
        if not web3.supports_traces:
            # if traces are not available, do not attempt to determine the revert reason
            raise exc or ValueError("Execution reverted")

        if self._dev_revert_msg is None:
            # no revert message and unable to check dev string - have to get trace
            self._expand_trace()
        if self.contract_address:
            source = ""
        elif CONFIG.argv["revert"]:
            source = self._traceback_string()
        else:
            source = self._error_string(1)
            contract = state._find_contract(self.receiver)
            if contract:
                marker = "//" if contract._build["language"] == "Solidity" else "#"
                line = self._traceback_string().split("\n")[-1]
                if marker + " dev: " in line:
                    self._dev_revert_msg = line[line.index(marker) + len(marker) : -5].strip()

>       raise exc._with_attr(
            source=source, revert_msg=self._revert_msg, dev_revert_msg=self._dev_revert_msg
        )
E       AttributeError: 'NoneType' object has no attribute '_with_attr'

venv\lib\site-packages\brownie\network\transaction.py:446: AttributeError
---------------------------------------------- Captured stdout setup -----------------------------------------------
Contract deployed to 0x3194cBDC3dbcd3E11a07892e7bA5c3394048Cc87
_______________________________________________ test_below_cost_mint _______________________________________________

    def test_below_cost_mint():
        account = get_dev_account()
        value = Web3.toWei(0.5, "ether")
        avvenire_contract = AvvenireTest[-1]
        with brownie.reverts():
>           avvenire_contract.auctionMint(1, {"from": account, "value": value})

tests\test_auction.py:88:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\test_auction.py:88: in test_below_cost_mint
    avvenire_contract.auctionMint(1, {"from": account, "value": value})
venv\lib\site-packages\brownie\network\contract.py:1629: in __call__
    return self.transact(*args)
venv\lib\site-packages\brownie\network\contract.py:1502: in transact
    return tx["from"].transfer(
venv\lib\site-packages\brownie\network\account.py:682: in transfer
    receipt._raise_if_reverted(exc)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <Transaction '0x7edd8048522ebfd879b6fdb4729ac2cfacd9d3048b857687f9d5302e6cf4d10f'>, exc = None

    def _raise_if_reverted(self, exc: Any) -> None:
        if self.status or CONFIG.mode == "console":
            return
        if not web3.supports_traces:
            # if traces are not available, do not attempt to determine the revert reason
            raise exc or ValueError("Execution reverted")

        if self._dev_revert_msg is None:
            # no revert message and unable to check dev string - have to get trace
            self._expand_trace()
        if self.contract_address:
            source = ""
        elif CONFIG.argv["revert"]:
            source = self._traceback_string()
        else:
            source = self._error_string(1)
            contract = state._find_contract(self.receiver)
            if contract:
                marker = "//" if contract._build["language"] == "Solidity" else "#"
                line = self._traceback_string().split("\n")[-1]
                if marker + " dev: " in line:
                    self._dev_revert_msg = line[line.index(marker) + len(marker) : -5].strip()

>       raise exc._with_attr(
            source=source, revert_msg=self._revert_msg, dev_revert_msg=self._dev_revert_msg
        )
E       AttributeError: 'NoneType' object has no attribute '_with_attr'

venv\lib\site-packages\brownie\network\transaction.py:446: AttributeError
---------------------------------------------- Captured stdout setup -----------------------------------------------
Contract deployed to 0x3194cBDC3dbcd3E11a07892e7bA5c3394048Cc87
_________________________________________________ test_public_mint _________________________________________________

    def test_public_mint():
        avvenire_contract = AvvenireTest[-1]
        mint_accounts = [accounts[2], accounts[3], accounts[4], accounts[5]]
        public_sale_price_wei = Web3.toWei(PUBLIC_SALE_PRICE_ETH, "ether")
        mint_quantity = 2
        mint_cost = public_sale_price_wei * mint_quantity

        print(chain.time())
        with brownie.reverts():
            # Should throw a VirtualMachineError
>           avvenire_contract.publicSaleMint(
                mint_quantity, PUBLIC_SALE_KEY, {"from": accounts[2], "value": mint_cost}
            )

tests\test_public.py:53:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\test_public.py:53: in test_public_mint
    avvenire_contract.publicSaleMint(
venv\lib\site-packages\brownie\network\contract.py:1629: in __call__
    return self.transact(*args)
venv\lib\site-packages\brownie\network\contract.py:1502: in transact
    return tx["from"].transfer(
venv\lib\site-packages\brownie\network\account.py:682: in transfer
    receipt._raise_if_reverted(exc)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <Transaction '0x78af36dd89eb2c258bd25c20210721c46c7a13768a4d4cb0f1b796f2c3437e6b'>, exc = None

    def _raise_if_reverted(self, exc: Any) -> None:
        if self.status or CONFIG.mode == "console":
            return
        if not web3.supports_traces:
            # if traces are not available, do not attempt to determine the revert reason
            raise exc or ValueError("Execution reverted")

        if self._dev_revert_msg is None:
            # no revert message and unable to check dev string - have to get trace
            self._expand_trace()
        if self.contract_address:
            source = ""
        elif CONFIG.argv["revert"]:
            source = self._traceback_string()
        else:
            source = self._error_string(1)
            contract = state._find_contract(self.receiver)
            if contract:
                marker = "//" if contract._build["language"] == "Solidity" else "#"
                line = self._traceback_string().split("\n")[-1]
                if marker + " dev: " in line:
                    self._dev_revert_msg = line[line.index(marker) + len(marker) : -5].strip()

>       raise exc._with_attr(
            source=source, revert_msg=self._revert_msg, dev_revert_msg=self._dev_revert_msg
        )
E       AttributeError: 'NoneType' object has no attribute '_with_attr'

venv\lib\site-packages\brownie\network\transaction.py:446: AttributeError
---------------------------------------------- Captured stdout setup -----------------------------------------------
Contract deployed to 0x3194cBDC3dbcd3E11a07892e7bA5c3394048Cc87
----------------------------------------------- Captured stdout call -----------------------------------------------
1645572512
_______________________________________________ test_whitelist_mint ________________________________________________

    def test_whitelist_mint():
        avvenire_contract = AvvenireTest[-1]
        whitelist = [accounts[1], accounts[2], accounts[3], accounts[4]]
        mint_quantity = 2
        # Total cost of mint + .1 ETH for gas
        total_mint_cost = Web3.toWei(
            PUBLIC_SALE_PRICE_ETH * (1 - WHITELIST_DISCOUNT) * mint_quantity, "ether"
        )
        gas_cost = Web3.toWei(0.1, "ether")
        total_cost = total_mint_cost + gas_cost

        for account in whitelist:
            account_balance_before = account.balance()
            tx = avvenire_contract.whiteListMint(
                mint_quantity, {"from": account, "value": total_cost}
            )

            # Asserts that account minted 2
            assert avvenire_contract.numberMinted(account) == 2

            # Asserts the account's expected ETH balance
            assert account.balance() == (account_balance_before - total_mint_cost)

            # Asserts that the allowlist[account] == 0
            assert avvenire_contract.allowlist(account) == 0

            # Asserts the account can't whitelist mint again
            with brownie.reverts():
>               avvenire_contract.whiteListMint(1, {"from": account, "value": total_cost})

tests\test_whitelist.py:73:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\test_whitelist.py:73: in test_whitelist_mint
    avvenire_contract.whiteListMint(1, {"from": account, "value": total_cost})
venv\lib\site-packages\brownie\network\contract.py:1629: in __call__
    return self.transact(*args)
venv\lib\site-packages\brownie\network\contract.py:1502: in transact
    return tx["from"].transfer(
venv\lib\site-packages\brownie\network\account.py:682: in transfer
    receipt._raise_if_reverted(exc)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <Transaction '0x7e84c3a490fe04875c2eb7de995889eec870095b8d60656ddd250ffde6282a73'>, exc = None

    def _raise_if_reverted(self, exc: Any) -> None:
        if self.status or CONFIG.mode == "console":
            return
        if not web3.supports_traces:
            # if traces are not available, do not attempt to determine the revert reason
            raise exc or ValueError("Execution reverted")

        if self._dev_revert_msg is None:
            # no revert message and unable to check dev string - have to get trace
            self._expand_trace()
        if self.contract_address:
            source = ""
        elif CONFIG.argv["revert"]:
            source = self._traceback_string()
        else:
            source = self._error_string(1)
            contract = state._find_contract(self.receiver)
            if contract:
                marker = "//" if contract._build["language"] == "Solidity" else "#"
                line = self._traceback_string().split("\n")[-1]
                if marker + " dev: " in line:
                    self._dev_revert_msg = line[line.index(marker) + len(marker) : -5].strip()

>       raise exc._with_attr(
            source=source, revert_msg=self._revert_msg, dev_revert_msg=self._dev_revert_msg
        )
E       AttributeError: 'NoneType' object has no attribute '_with_attr'

venv\lib\site-packages\brownie\network\transaction.py:446: AttributeError
---------------------------------------------- Captured stdout setup -----------------------------------------------
Contract deployed to 0x3194cBDC3dbcd3E11a07892e7bA5c3394048Cc87
______________________________________________ test_remove_whitelist _______________________________________________

    def test_remove_whitelist():
        avvenire_contract = AvvenireTest[-1]
        admin_account = get_account()
        whitelist = [accounts[1], accounts[2], accounts[3], accounts[4]]
        for account in whitelist:
            avvenire_contract.removeFromWhitelist(account, {"from": admin_account})

            # Asserts that the allowlist[account] == 0
            assert avvenire_contract.allowlist(account) == 0

            total_cost = Web3.toWei(
                PUBLIC_SALE_PRICE_ETH * (1 - WHITELIST_DISCOUNT) + 0.1, "ether"
            )

            # Asserts the account can't whitelist mint again
            with brownie.reverts():
>               avvenire_contract.whiteListMint(1, {"from": account, "value": total_cost})

tests\test_whitelist.py:92:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests\test_whitelist.py:92: in test_remove_whitelist
    avvenire_contract.whiteListMint(1, {"from": account, "value": total_cost})
venv\lib\site-packages\brownie\network\contract.py:1629: in __call__
    return self.transact(*args)
venv\lib\site-packages\brownie\network\contract.py:1502: in transact
    return tx["from"].transfer(
venv\lib\site-packages\brownie\network\account.py:682: in transfer
    receipt._raise_if_reverted(exc)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <Transaction '0x5e32a66b1f9f6e5fa92ca61c891b2910f27b868a6fbc788bb2afbe7621b620a1'>, exc = None

    def _raise_if_reverted(self, exc: Any) -> None:
        if self.status or CONFIG.mode == "console":
            return
        if not web3.supports_traces:
            # if traces are not available, do not attempt to determine the revert reason
            raise exc or ValueError("Execution reverted")

        if self._dev_revert_msg is None:
            # no revert message and unable to check dev string - have to get trace
            self._expand_trace()
        if self.contract_address:
            source = ""
        elif CONFIG.argv["revert"]:
            source = self._traceback_string()
        else:
            source = self._error_string(1)
            contract = state._find_contract(self.receiver)
            if contract:
                marker = "//" if contract._build["language"] == "Solidity" else "#"
                line = self._traceback_string().split("\n")[-1]
                if marker + " dev: " in line:
                    self._dev_revert_msg = line[line.index(marker) + len(marker) : -5].strip()

>       raise exc._with_attr(
            source=source, revert_msg=self._revert_msg, dev_revert_msg=self._dev_revert_msg
        )
E       AttributeError: 'NoneType' object has no attribute '_with_attr'

venv\lib\site-packages\brownie\network\transaction.py:446: AttributeError
---------------------------------------------- Captured stdout setup -----------------------------------------------
Contract deployed to 0x3194cBDC3dbcd3E11a07892e7bA5c3394048Cc87
===================================================== Coverage =====================================================

  contract: AvvenireTest - 44.4%
    AvvenireTest.refundIfOver - 87.5%
    ERC721A.ownershipOf - 87.5%
    AvvenireTest.publicSaleMint - 83.3%
    AvvenireTest.auctionMint - 81.2%
    AvvenireTest.refund - 75.0%
    AvvenireTest.teamMint - 75.0%
    AvvenireTest.whiteListMint - 75.0%
    AvvenireTest.withdrawMoney - 75.0%
    ERC721A._mint - 75.0%
    ERC721A._numberMinted - 75.0%
    ERC721AOwnersExplicit._setOwnersExplicit - 68.8%
    AvvenireTest.getAuctionPrice - 50.0%
    ERC721A._transfer - 4.2%
    AvvenireTest.refundMe - 0.0%
    ERC721A.approve - 0.0%
    ERC721A.balanceOf - 0.0%
    ERC721A.getApproved - 0.0%
    ERC721A.safeTransferFrom - 0.0%
    ERC721A.setApprovalForAll - 0.0%
    ERC721A.tokenByIndex - 0.0%
    ERC721A.tokenOfOwnerByIndex - 0.0%
    ERC721A.tokenURI - 0.0%
    Ownable.transferOwnership - 0.0%

Coverage report saved at C:\Users\navee\OneDrive\Desktop\GitHub\Avvenire\reports\coverage.json
View the report using the Brownie GUI
============================================= short test summary info ==============================================
FAILED tests/test_auction.py::test_mint_before_start - AttributeError: 'NoneType' object has no attribute '_with_a...
FAILED tests/test_auction.py::test_auction_mint - AttributeError: 'NoneType' object has no attribute '_with_attr'
FAILED tests/test_auction.py::test_below_cost_mint - AttributeError: 'NoneType' object has no attribute '_with_attr'
FAILED tests/test_public.py::test_public_mint - AttributeError: 'NoneType' object has no attribute '_with_attr'
FAILED tests/test_whitelist.py::test_whitelist_mint - AttributeError: 'NoneType' object has no attribute '_with_attr'
FAILED tests/test_whitelist.py::test_remove_whitelist - AttributeError: 'NoneType' object has no attribute '_with_...
=========================================== 6 failed, 5 passed in 24.78s ===========================================
Terminating local RPC client...
